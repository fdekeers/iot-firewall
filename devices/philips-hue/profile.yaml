---
device-info:
  name: philips-hue
  mac: 00:17:88:74:c2:dc
  ipv4: 192.168.1.141
  mud-version: 1
  mud-url: https://philips-hue.com/philips-hue
  last-update: "2022-03-15T10:27:29.170+01:00"
  cache-validity: 100
  is-supported: true


patterns:

  dns-hue-server:
    protocols:
      dns:
        qtype:
          - A
          - AAAA
        domain-name: # Will be populated by parsing #
        dst-port: 53
      ipv4:
        src: self
        dst: gateway
    direction: both
    
  https-hue-server:
    protocols:
      tcp:
        dst-port: 443
      ipv4:
        src: self
        dst: # Will be populated by parsing #
    destination: both
    stats:
      duration: 10


individual-policies:

  ##### DNS TRAFFIC #####

  dns-ipv4:
    protocols:
      dns:
        qtype:
          - A
          - AAAA
        domain-name:
          - www.philips-hue.com
          - www.ecdinterface.philips.com
          - ws.meethue.com
          - dcp.dc1.philips.com
      udp:
        dst-port: 53
      ipv4:
        src: self
        dst: gateway
    direction: both

  # IGMP: join multicast group
  igmp-join-multicast:
    protocols:
      igmp:
        version: 3
        type: membership report
        group: mdns
      ipv4:
        src: self
        dst: igmpv3  # 224.0.0.22

  # ARP: gateway to hue
  arp-gateway-hue:
    protocols:
      arp:
          type: request
          sha: gateway
          tha: self
          spa: gateway
          tpa: self
    direction: both

  # MDNS
  mdns-query:
    protocols:
      mdns:
        qtype: ANY
        domain-name:
          - Philips Hue - 74C2DC._hue._tcp.local
          - 00178874c2dc.local
      udp:
        src-port: 5353
        dst-port: 5353
      ipv4:
        src: self
        dst: mdns

  # Local HTTPS communication between Philips Hue app and bridge
  https-app-bridge:
    protocols:
      tcp:
        dst-port: 443
      ipv4:
        src: local  # Mobile phone running the app
        dst: self
    destination: both
    initiator: src
    stats:
      rate: 10/second burst 100 packets

  # HTTP GET request from Amazon Echo to Hue bridge
  http-echo-hue-local:
    protocols:
      http:
        method: GET
        uri: /api/MIgLn67KRlSoofSTjWMxxGw5uD-ewnMnYthbfZhg/lights/1
      tcp:
        dst-port: 80
      ipv4:
        src: local
        dst: self
    direction: both
    initiator: src
    stats:
      packet-count: 20



interaction-policies:

  # IP allocation at boot
  ip-allocation:

    dhcp-discover:
      protocols:
        dhcp:
          type: discover
          client-mac: self
        udp:
          src-port: 68
          dst-port: 67
        ipv4:
          src: 0.0.0.0
          dst: broadcast
    
    arp-gateway-hue:
      protocols:
        arp:
          type: request
          sha: self
          tha: default
          spa: self
          tpa: gateway
    
    icmp-ping:
      protocols:
        icmp:
          type: echo-request
        ipv4:
          src: gateway
          dst: self
    
    dhcp-offer:
      protocols:
        dhcp:
          type: offer
          client-mac: self
        udp:
          src-port: 67
          dst-port: 68
        ipv4:
          src: gateway
          dst: self
    
    dhcp-request:
      protocols:
        dhcp:
          type: request
          client-mac: self
        udp:
          src-port: 68
          dst-port: 67
        ipv4:
          src: 0.0.0.0
          dst: broadcast

    dhcp-ack:
      protocols:
        dhcp:
          type: ack
          client-mac: self
        udp:
          src-port: 67
          dst-port: 68
        ipv4:
          src: gateway
          dst: self

    arp-hue-gateway:
      protocols:
        arp:
          type: request
          sha: self
          tha: default
          spa: self
          tpa: gateway
      direction: both


  # HTTP traffic at boot
  http-boot:

    dns-hue-servers:
      protocols:
        dns:
          qtype:
            - A
            - AAAA
          domain-name:
            - www.ecdinterface.philips.com
            - dcp.dc1.philips.com
        udp:
          dst-port: 53
        ipv4:
          src: self
          dst: gateway
      direction: both

    http-post-device-portal:
      protocols:
        http:
          method: POST
          url: /DevicePortalICPRequestHandler/RequestHandler.ashx
        tcp:
          dst-port: 80
        ipv4:
          src: self
          dst: www.ecdinterface.philips.com
    
    http-post-notification-service:
      protocols:
        http:
          method: post
          url: /NotificationService/RequestHandler.ashx
        tcp:
          dst-port: 80
        ipv4:
          src: self
          dst: www.ecdinterface.philips.com

    http-post-request-handler:
      protocols:
        http:
          method: post
          url: /DcpRequestHandler/index.ashx
        tcp:
          dst-port: 80
        ipv4:
          src: self
          dst: dcp.dc1.philips.com

  
  # NTP: retrieve current time
  ntp-all-servers:

    dns-hue-ntp-server:
      protocols:
        dns:
          qtype:
            - A
            - AAAA
          domain-name:
            - time1.google.com
            - time2.google.com
            - time3.google.com
            - time4.google.com
            - ntp1.aliyun.com
            - ntp2.aliyun.com
            - ntp3.aliyun.com
            - ntp4.aliyun.com
        udp:
          dst-port: 53
        ipv4:
          src: self
          dst: gateway
      direction: both

    ntp-hue-ntp-server:
      protocols:
        udp:
          dst-port: 123  # NTP
        ipv4:
          src: self
          dst:
            - time1.google.com
            - time2.google.com
            - time3.google.com
            - time4.google.com
            - ntp1.aliyun.com
            - ntp2.aliyun.com
            - ntp3.aliyun.com
            - ntp4.aliyun.com
      direction: both


  ##### BACKGROUND TRAFFIC WITH SERVERS #####

  background-time-meethue:
    dns-time-meethue: !include patterns.dns-hue-server protocols.dns.domain-name:time.meethue.com
    https-time-meethue: !include patterns.https-hue-server protocols.ipv4.dst:time.meethue.com

  background-data-meethue:
    dns-data-meethue: !include patterns.dns-hue-server protocols.dns.domain-name:data.meethue.com
    https-data-meethue: !include patterns.https-hue-server protocols.ipv4.dst:data.meethue.com

  background-diag-meethue:
    dns-diag-meethue: !include patterns.dns-hue-server protocols.dns.domain-name:diag.meethue.com
    https-diag-meethue: !include patterns.https-hue-server protocols.ipv4.dst:diag.meethue.com

  background-mqtt:
    dns-mqtt: !include patterns.dns-hue-server protocols.dns.domain-name:mqtt.2030.ltsapis.goog
    https-mqtt: !include patterns.https-hue-server protocols.ipv4.dst:mqtt.2030.ltsapis.goog
  
  background-app-external:
    dns-ws-meethue: !include patterns.dns-hue-server protocols.dns.domain-name:ws.meethue.com

    https-hue-ws:
      protocols:
        tcp:
          dst-port: 443
        ipv4:
          src: self
          dst: ws.meethue.com
      direction: both
      initiator: src
      stats:
        rate: 10/second burst 100 packets


  # SSDP discovery
  discover-hue-services:

    ssdp-search:
      protocols:
        ssdp:
          method: M_SEARCH
        udp:
          dst-port: 1900
        ipv4:
          src: local
          dst: ssdp  # 239.255.255.250
    
    ssdp-notify:
      protocols:
        ssdp:
          method: NOTIFY
        udp:
          src-port: 1900
          dst-port: 1900
        ipv4:
          src: self
          dst: ssdp  # 239.255.255.250


  # Opening SmartThings app in local network
  open-smartthings-app-local:

    open-app: !include ../smartthings-hub/profile.yaml#interaction-policies.open-app-local

    ssdp-response-hue:
      protocols:
        ssdp:
          response: true
        udp:
          src-port: 1900
        ipv4:
          src: self
          dst: local  # Mobile phone running the app


  # HTTP request from local SmartThings app to Hue bridge
  http-get-description:

    http-get-phone-hue:
      protocols:
        http:
          method: GET
          uri: /description.xml
        tcp:
          dst-port: 80
        ipv4:
          src: local  # Mobile phone running the app
          dst: self
      destination: both
      initiator: src
      stats:
        packet-count: 11

    ssdp-notify-hue:
      protocols:
        ssdp:
          method: NOTIFY
        udp:
          src-port: 1900
          dst-port: 1900
        ipv4:
          src: self
          dst: ssdp  # 239.255.255.250

...