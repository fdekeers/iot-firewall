

/**
 * @brief {{scenario}} callback function, called when a packet enters the queue.
 * 
 * @param pkt_id packet ID for netfilter queue
 * @param payload pointer to the packet payload
 * @param arg pointer to the argument passed to the callback function
 * @return the verdict for the packet
 */
uint32_t callback_{{scenario}}(int pkt_id, uint8_t *payload, void *arg) {
    printf("Received packet\n");
    // Skip layer 3 and 4 headers
    size_t skipped = get_ip_header_length(payload);
    {% if protocol == 'http' %}
    uint16_t src_port = get_src_port(payload + skipped);
    {% endif %}
    skipped += get_tcp_header_length(payload + skipped);

    // Parse message
    {{protocol}}_message_t message = {{protocol}}_parse_message(payload + skipped
    {%- if protocol == 'http' -%}
    , src_port
    {%- endif -%}
    );
    {{protocol}}_print_message(message);

    // Custom match
    if (
        state == {{old_state}}{{match_a}}
    ) {
        state = {{new_state}};
        return NF_ACCEPT;
    } else if (
        state == {{new_state}}{{match_b}}
    ) {
        state = {{old_state}};
        return NF_ACCEPT;
    }

    return NF_DROP;
}

